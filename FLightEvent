CREATE PROCEDURE insIntoFlight_Event
@EventName_ VARCHAR(20), 
@Flight_Num INT
AS
DECLARE @EID INT, @FID INT

EXEC getEventID
@EventName = @EventName_,
@EventID = @EID OUTPUT

-- Error handle @EID in case if it's NULL/empty
IF @EID IS NULL
BEGIN 
    PRINT '@EID is empty and this will cause the transaction to be failed';
    THROW 51000, '@EID cannot be NULL', 1;
END

EXEC getFlightID
@FNum = @Flight_Num
@FlightID = @FID OUTPUT

-- Error handle @FID in case if it's NULL/empty
IF @FID IS NULL
BEGIN 
    PRINT '@FID is empty and this will cause the transaction to be failed';
    THROW 51000, '@FID cannot be NULL', 1;
END

BEGIN TRAN T1
    INSERT INTO tblFlight_Event
    (EventID, FlightID)
    VALUES 
    (@EID, @FID)
    IF @@ERROR <> 0
        BEGIN 
            PRINT 'There is an error - rolling back transaction T1'
            ROLLBACK TRAN T1
        END
    ELSE
COMMIT TRAN T1
GO



CREATE PROCEDURE uspWRAPPER_newFlight_Event
@Run INT 
AS
DECLARE @EventCount INT = (SELECT COUNT(*) FROM tblEvent)
DECLARE @FlightCount INT = (SELECT COUNT(*) FROM tblFlight)

DECLARE @EName VARCHAR(20), @Fnum INT


DECLARE @PK INT

WHILE @Run > 0 
BEGIN

SET @PK = (SELECT RAND() * @EventCount + 1)
SET @EName = (SELECT EventName FROM tblEvent WHERE EventID = @PK)

SET @PK = (SELECT RAND() * @FlightCount + 1)
SET @Fnum = (SELECT flightnum FROM tblFlight WHERE FlightID = @PK)

EXEC [insIntoFlight_Event]
@EventName_ = @EName,
@Flight_Num = @Fnum
SET @Run = @Run - 1
END

EXEC uspWRAPPER_newFlight_Event @Run = 1000;
GO
